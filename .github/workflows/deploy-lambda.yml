name: Deploy and Test AWS Lambda (Python)

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'terraform/**'
      - '.github/workflows/**'

jobs:
  setup_env:
    uses: ./.github/workflows/setup-env.yml

  deploy:
    needs: setup_env
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ needs.setup_env.outputs.S3_BUCKET }}
      S3_KEY_PATH: ${{ needs.setup_env.outputs.S3_KEY_PATH }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Package Lambda function
        run: |
          mkdir -p package
          cp -r ./src/* ./package/ || echo "No src directory, skipping"
          cd package
          zip -r ../function.zip .
          cd ..

      - name: Deploy Lambda function
        run: |
          aws lambda update-function-code \
            --function-name lambda_function_bedrock \
            --zip-file fileb://function.zip \
            --region $AWS_REGION \
            --debug 2>&1 | tee debug.log
          echo "Debug log:"
          cat debug.log

  test:
    needs: deploy
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      S3_BUCKET: ${{ needs.setup_env.outputs.S3_BUCKET }}
      S3_KEY_PATH: ${{ needs.setup_env.outputs.S3_KEY_PATH }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'  # Use the Python version your script requires

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Retrieve API Endpoint from S3
        run: |
          aws s3 cp s3://${S3_BUCKET}/${S3_KEY_PATH}/api_endpoint.txt .
          echo "API_ENDPOINT=$(cat api_endpoint.txt)" >> $GITHUB_ENV

      - name: Run Lambda Function Test
        run: |
          python ./src/test/test_lambda_function.py --endpoint $API_ENDPOINT
